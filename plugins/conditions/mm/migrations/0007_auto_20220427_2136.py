# Generated by Django 2.0.13 on 2022-04-27 21:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import opal.models


class Migration(migrations.Migration):

    dependencies = [
        ('opal', '0042_auto_20220421_1545'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mm', '0006_auto_20220427_1947'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicalPresentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(blank=True, null=True, verbose_name='Updated')),
                ('consistency_token', models.CharField(max_length=8, verbose_name='Consistency Token')),
                ('infection_type', models.CharField(blank=True, choices=[('Clinically Documented Infection', 'Clinically Documented Infection'), ('Undocumented Infection', 'Undocumented Infection'), ('Microbiologically Documented Without Bacteremia', 'Microbiologically Documented Without Bacteremia'), ('Microbiologically Documented With Bacteremia', 'Microbiologically Documented With Bacteremia'), ('Other Microbiologic Documented Infection', 'Other Microbiologic Documented Infection')], max_length=256, null=True, verbose_name='Infection_Type')),
                ('microorganism', models.CharField(blank=True, max_length=256, null=True, verbose_name='Microorganism')),
                ('microorganism_source', models.CharField(blank=True, max_length=256, null=True, verbose_name='Microorganism source')),
                ('renal_failure', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=256, null=True, verbose_name='Renal Failure')),
                ('hypercalcemia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=256, null=True, verbose_name='Hypercalcemia')),
                ('fever', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=256, null=True, verbose_name='Fever')),
                ('anemia', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=256, null=True, verbose_name='Anemia')),
                ('dialysis', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=256, null=True, verbose_name='Dialysis')),
                ('bone_pain', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=256, null=True, verbose_name='Bone Pain')),
                ('extramedullary_plasmacytomas', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=256, null=True, verbose_name='Extramedullary plasmacytomas')),
                ('iss', models.CharField(blank=True, choices=[('One', 'One'), ('Two', 'Two'), ('Three', 'Three')], max_length=256, null=True, verbose_name='ISS')),
                ('riss', models.CharField(blank=True, choices=[('Stage I', 'Stage I'), ('Stage II', 'Stage II'), ('Stage III', 'Stage III'), ('Unknown', 'Unknown')], max_length=256, null=True, verbose_name='R-ISS')),
                ('details', models.TextField(blank=True, default='', verbose_name='Details')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_mm_clinicalpresentation_subrecords', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opal.Episode', verbose_name='Episode')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_mm_clinicalpresentation_subrecords', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'abstract': False,
            },
            bases=(opal.models.UpdatesFromDictMixin, opal.models.ToDictMixin, models.Model),
        ),
        migrations.RemoveField(
            model_name='cytogenetics',
            name='description',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='bone_pain_pres_clinic',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='dialysis',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='extramedullary_plasmacytomas',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='infection_type',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='iss_diagnostic_status',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='microorg_pc_focus',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='pres_clinical_anemia',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='pres_clinical_description',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='pres_clinical_fever',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='pres_clinical_hypercalcemia',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='pres_clinical_microorganism',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='pres_clinical_renal_failure',
        ),
        migrations.RemoveField(
            model_name='mmdiagnosisdetails',
            name='riss_stage',
        ),
        migrations.AddField(
            model_name='cytogenetics',
            name='details',
            field=models.TextField(blank=True, default='', verbose_name='Details'),
        ),
        migrations.AddField(
            model_name='mmdiagnosisdetails',
            name='epidemiological_register',
            field=models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=256, null=True, verbose_name='Epidemiological Register'),
        ),
    ]
