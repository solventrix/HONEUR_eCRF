# Generated by Django 2.2.16 on 2022-08-23 10:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import opal.models


class Migration(migrations.Migration):

    dependencies = [
        ('opal', '0042_auto_20220421_1545'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('entrytool', '0046_patientload'),
        ('mm', '0003_auto_20220811_1047'),
    ]

    operations = [
        migrations.AddField(
            model_name='mmdiagnosisdetails',
            name='heavy_chain_type',
            field=models.CharField(blank=True, choices=[('IgG', 'IgG'), ('IgD', 'IgD'), ('IgA', 'IgA'), ('IgM', 'IgM'), ('IgE', 'IgE'), ('No Heavy Chain', 'No Heavy Chain'), ('Other', 'Other')], max_length=256, null=True, verbose_name='Heavy chain type'),
        ),
        migrations.AddField(
            model_name='mmdiagnosisdetails',
            name='light_chain_type',
            field=models.CharField(blank=True, choices=[('Kappa', 'Kappa'), ('Lambda', 'Lambda'), ('Non-Secretory', 'Non-Secretory'), ('No Light Chain', 'No Light Chain')], max_length=256, null=True, verbose_name='Light chain type'),
        ),
        migrations.AddField(
            model_name='mmresponse',
            name='progression_date',
            field=models.DateField(blank=True, null=True, verbose_name='Progression Date'),
        ),
        migrations.CreateModel(
            name='MMCytogenetics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(blank=True, null=True, verbose_name='Updated')),
                ('consistency_token', models.CharField(max_length=8, verbose_name='Consistency Token')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('tp_53', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=10, null=True, verbose_name='tp 53')),
                ('t4_14', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=10, null=True, verbose_name='t4;14')),
                ('t4_14_haploid_karyotype', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=256, null=True, verbose_name='t(4;14) Haploid Karyotype')),
                ('t4_14_16', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=10, null=True, verbose_name='t14;16')),
                ('t4_14_not_effected', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=256, null=True, verbose_name='t(4;14) Not Effected')),
                ('t11_14', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=10, null=True, verbose_name='t(11;14)')),
                ('del1p', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=10, verbose_name='del 1p')),
                ('del_17p', models.CharField(choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=10, verbose_name='del 17p')),
                ('ighv', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative'), ('Unknown', 'Unknown')], max_length=25, null=True, verbose_name='IGHV')),
                ('hospital_ft', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_mm_mmcytogenetics_subrecords', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opal.Episode', verbose_name='Episode')),
                ('hospital_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='entrytool.Hospital')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_mm_mmcytogenetics_subrecords', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Cytogenetics',
                'verbose_name_plural': 'Cytogenetics',
            },
            bases=(opal.models.UpdatesFromDictMixin, opal.models.ToDictMixin, models.Model),
        ),
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(blank=True, null=True, verbose_name='Updated')),
                ('consistency_token', models.CharField(max_length=8, verbose_name='Consistency Token')),
                ('date', models.DateField(verbose_name='Date')),
                ('LDH', models.FloatField(blank=True, null=True, verbose_name='LDH')),
                ('beta2m', models.FloatField(blank=True, null=True, verbose_name='beta2m')),
                ('albumin', models.FloatField(blank=True, null=True, verbose_name='Albumin')),
                ('creatinine', models.FloatField(blank=True, max_length=256, null=True, verbose_name='Creatinine Clearance')),
                ('calcium', models.FloatField(blank=True, max_length=256, null=True, verbose_name='Calcium')),
                ('mprotein_urine', models.FloatField(blank=True, null=True, verbose_name='MProtein Urine')),
                ('mprotein_serum', models.FloatField(blank=True, null=True, verbose_name='MProtein Serum')),
                ('mprotein_24h', models.FloatField(blank=True, null=True, verbose_name='Mprotein in 24 hour')),
                ('igg_count', models.FloatField(blank=True, null=True, verbose_name='IgG Count')),
                ('igd_count', models.FloatField(blank=True, null=True, verbose_name='IgD Count')),
                ('iga_count', models.FloatField(blank=True, null=True, verbose_name='IgA Count')),
                ('igm_count', models.FloatField(blank=True, null=True, verbose_name='IgM Count')),
                ('ige_count', models.FloatField(blank=True, null=True, verbose_name='IgE Count')),
                ('heavy_chain_type', models.CharField(blank=True, choices=[('IgG', 'IgG'), ('IgD', 'IgD'), ('IgA', 'IgA'), ('IgM', 'IgM'), ('IgE', 'IgE'), ('No Heavy Chain', 'No Heavy Chain'), ('Other', 'Other')], max_length=256, null=True, verbose_name='Heavy Chain Type')),
                ('heavy_chain_type_other', models.CharField(blank=True, max_length=256, null=True, verbose_name='Heavy Chain Type Other')),
                ('light_chain_type', models.CharField(blank=True, choices=[('Kappa', 'Kappa'), ('Lambda', 'Lambda'), ('Non-Secretory', 'Non-Secretory'), ('No Light Chain', 'No Light Chain')], max_length=256, null=True, verbose_name='Light Chain Type')),
                ('lambda_light_chain_count', models.FloatField(blank=True, max_length=256, null=True, verbose_name='Lambda Count')),
                ('kappa_light_chain_count', models.FloatField(blank=True, max_length=256, null=True, verbose_name='Kappa Count')),
                ('kappa_lambda_ratio', models.FloatField(blank=True, max_length=256, null=True, verbose_name='Kappa Lambda Ratio')),
                ('hospital_ft', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_mm_labtest_subrecords', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='opal.Episode', verbose_name='Episode')),
                ('hospital_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='entrytool.Hospital')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_mm_labtest_subrecords', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Lab Tests',
                'verbose_name_plural': 'Lab Tests',
            },
            bases=(opal.models.UpdatesFromDictMixin, opal.models.ToDictMixin, models.Model),
        ),
    ]
